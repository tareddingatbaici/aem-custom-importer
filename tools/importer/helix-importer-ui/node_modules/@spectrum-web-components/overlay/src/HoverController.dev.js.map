{
  "version": 3,
  "sources": ["HoverController.ts"],
  "sourcesContent": ["/*\nCopyright 2024 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { conditionAttributeWithId } from '@spectrum-web-components/base/src/condition-attribute-with-id.js';\nimport { randomID } from '@spectrum-web-components/shared/src/random-id.js';\n\nimport {\n    InteractionController,\n    InteractionTypes,\n} from './InteractionController.dev.js'\nimport { noop } from './AbstractOverlay.dev.js'\n\nconst HOVER_DELAY = 300;\n\nexport class HoverController extends InteractionController {\n    override type = InteractionTypes.hover;\n\n    private elementIds: string[] = [];\n\n    focusedin = false;\n\n    private hoverTimeout?: ReturnType<typeof setTimeout>;\n\n    pointerentered = false;\n\n    handleTargetFocusin(): void {\n        // eslint-disable-next-line @spectrum-web-components/document-active-element\n        if (!document.activeElement?.matches(':focus-visible')) {\n            return;\n        }\n        this.host.open = true;\n        this.focusedin = true;\n    }\n\n    handleTargetFocusout(): void {\n        this.focusedin = false;\n        if (this.pointerentered) return;\n        this.host.open = false;\n    }\n\n    handleTargetPointerenter(): void {\n        if (this.hoverTimeout) {\n            clearTimeout(this.hoverTimeout);\n            this.hoverTimeout = undefined;\n        }\n        if (this.host.disabled) return;\n        this.host.open = true;\n        this.pointerentered = true;\n    }\n\n    handleTargetPointerleave(): void {\n        this.doPointerleave();\n    }\n\n    // set a timeout once the pointer enters and the overlay is shown\n    // give the user time to enter the overlay\n    handleHostPointerenter(): void {\n        if (this.hoverTimeout) {\n            clearTimeout(this.hoverTimeout);\n            this.hoverTimeout = undefined;\n        }\n    }\n\n    handleHostPointerleave(): void {\n        this.doPointerleave();\n    }\n\n    override prepareDescription(): void {\n        // require \"content\" to apply relationship\n        if (!this.host.elements.length) return;\n\n        const triggerRoot = this.target.getRootNode();\n        const contentRoot = this.host.elements[0].getRootNode();\n        const overlayRoot = this.host.getRootNode();\n        if (triggerRoot === overlayRoot) {\n            this.prepareOverlayRelativeDescription();\n        } else if (triggerRoot === contentRoot) {\n            this.prepareContentRelativeDescription();\n        }\n    }\n\n    private prepareOverlayRelativeDescription(): void {\n        const releaseDescription = conditionAttributeWithId(\n            this.target,\n            'aria-describedby',\n            [this.host.id]\n        );\n        this.releaseDescription = () => {\n            releaseDescription();\n            this.releaseDescription = noop;\n        };\n    }\n\n    private prepareContentRelativeDescription(): void {\n        const elementIds: string[] = [];\n        const appliedIds = this.host.elements.map((el) => {\n            elementIds.push(el.id);\n            if (!el.id) {\n                el.id = `${this.host.tagName.toLowerCase()}-helper-${randomID()}`;\n            }\n            return el.id;\n        });\n        this.elementIds = elementIds;\n        const releaseDescription = conditionAttributeWithId(\n            this.target,\n            'aria-describedby',\n            appliedIds\n        );\n        this.releaseDescription = () => {\n            releaseDescription();\n            this.host.elements.map((el, index) => {\n                el.id = this.elementIds[index];\n            });\n            this.releaseDescription = noop;\n        };\n    }\n\n    protected doPointerleave(): void {\n        this.pointerentered = false;\n        const triggerElement = this.target as HTMLElement;\n        if (this.focusedin && triggerElement.matches(':focus-visible')) return;\n\n        this.hoverTimeout = setTimeout(() => {\n            this.host.open = false;\n        }, HOVER_DELAY);\n    }\n\n    override init(): void {\n        // Clean up listeners if they've already been bound\n        this.abortController?.abort();\n        this.abortController = new AbortController();\n        const { signal } = this.abortController;\n        this.target.addEventListener(\n            'focusin',\n            () => this.handleTargetFocusin(),\n            { signal }\n        );\n        this.target.addEventListener(\n            'focusout',\n            () => this.handleTargetFocusout(),\n            { signal }\n        );\n        this.target.addEventListener(\n            'pointerenter',\n            () => this.handleTargetPointerenter(),\n            { signal }\n        );\n        this.target.addEventListener(\n            'pointerleave',\n            () => this.handleTargetPointerleave(),\n            { signal }\n        );\n        this.host.addEventListener(\n            'pointerenter',\n            () => this.handleHostPointerenter(),\n            { signal }\n        );\n        this.host.addEventListener(\n            'pointerleave',\n            () => this.handleHostPointerleave(),\n            { signal }\n        );\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
