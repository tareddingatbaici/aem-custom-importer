"use strict";
export var InteractionTypes = /* @__PURE__ */ ((InteractionTypes2) => {
  InteractionTypes2[InteractionTypes2["click"] = 0] = "click";
  InteractionTypes2[InteractionTypes2["hover"] = 1] = "hover";
  InteractionTypes2[InteractionTypes2["longpress"] = 2] = "longpress";
  return InteractionTypes2;
})(InteractionTypes || {});
export class InteractionController {
  constructor(host, target, isPersistent = false) {
    this.host = host;
    this.target = target;
    this.isPersistent = isPersistent;
    this.host.addController(this);
    this.prepareDescription(this.target);
    if (this.isPersistent) {
      this.init();
    }
  }
  get activelyOpening() {
    return false;
  }
  prepareDescription(_) {
  }
  releaseDescription() {
  }
  shouldCompleteOpen() {
  }
  /* c8 ignore next 3 */
  init() {
  }
  abort() {
    var _a;
    this.releaseDescription();
    (_a = this.abortController) == null ? void 0 : _a.abort();
  }
  hostConnected() {
    this.init();
  }
  hostDisconnected() {
    if (!this.isPersistent) {
      this.abort();
    }
  }
}
//# sourceMappingURL=InteractionController.dev.js.map
