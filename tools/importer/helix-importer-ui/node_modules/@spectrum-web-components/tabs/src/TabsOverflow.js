"use strict";var p=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var r=(c,a,t,o)=>{for(var e=o>1?void 0:o?u(a,t):a,l=c.length-1,s;l>=0;l--)(s=c[l])&&(e=(o?s(a,t,e):s(e))||e);return o&&e&&p(a,t,e),e};import{html as h,SizedMixin as d,SpectrumElement as S}from"@spectrum-web-components/base";import{property as i,query as v,queryAssignedElements as b,state as f}from"@spectrum-web-components/base/src/decorators.js";import{classMap as n}from"@spectrum-web-components/base/src/directives.js";import{ResizeController as m}from"@lit-labs/observers/resize-controller.js";import"@spectrum-web-components/action-button/sp-action-button.js";import"@spectrum-web-components/icons-ui/icons/sp-icon-chevron100.js";import C from"@spectrum-web-components/icon/src/spectrum-icon-chevron.css.js";import g from"./tabs-sizes.css.js";import y from"./tabs-overflow.css.js";export class TabsOverflow extends d(S){constructor(){super();this.compact=!1;this.labelPrevious="Scroll to previous tabs";this.labelNext="Scroll to next tabs";this.overflowState={canScrollLeft:!1,canScrollRight:!1};this.resizeController=new m(this,{target:this,callback:()=>{this._updateScrollState()}})}static get styles(){return[C,y,g]}firstUpdated(t){super.firstUpdated(t);const[o]=this.scrollContent;o&&(o.enableTabsScroll=!0),this.resizeController.observe(this.overflowContainer)}async _handleSlotChange(){const[t]=this.scrollContent;await(t==null?void 0:t.updateComplete),this._updateScrollState()}_updateScrollState(){const{scrollContent:t,overflowState:o}=this;if(t){const[e]=this.scrollContent,{canScrollLeft:l,canScrollRight:s}=(e==null?void 0:e.scrollState)||{canScrollLeft:!1,canScrollRight:!1};this.overflowState={...o,canScrollLeft:l,canScrollRight:s}}}_handleScrollClick(t){const o=t.currentTarget,[e]=this.scrollContent,l=e.clientWidth*.5,s=o.classList.contains("left-scroll")?-l:l;e.scrollTabs(s,"smooth")}updated(t){super.updated(t),t.has("dir")&&this._updateScrollState()}render(){const{canScrollRight:t,canScrollLeft:o}=this.overflowState,e=this.labelPrevious,l=this.labelNext;return h`
            <div
                class=${n({"tabs-overflow-container":!0,"left-shadow":o,"right-shadow":t})}
            >
                <sp-action-button
                    class=${n({"left-scroll":!0,show:o})}
                    aria-label=${e}
                    quiet
                    dir="rtl"
                    tabindex="-1"
                    @click=${this._handleScrollClick}
                >
                    <sp-icon-chevron100
                        slot="icon"
                        class="spectrum-UIIcon-ChevronLeft300"
                    ></sp-icon-chevron100>
                </sp-action-button>
                <sp-action-button
                    class=${n({"right-scroll":!0,show:t})}
                    aria-label=${l}
                    quiet
                    tabindex="-1"
                    @click=${this._handleScrollClick}
                >
                    <sp-icon-chevron100
                        slot="icon"
                        class="spectrum-UIIcon-ChevronRight300"
                    ></sp-icon-chevron100>
                </sp-action-button>
                <slot
                    @slotchange=${this._handleSlotChange}
                    @sp-tabs-scroll=${this._updateScrollState}
                ></slot>
            </div>
        `}}r([i({type:Boolean,reflect:!0})],TabsOverflow.prototype,"compact",2),r([i({type:String,attribute:"label-previous"})],TabsOverflow.prototype,"labelPrevious",2),r([i({type:String,attribute:"label-next"})],TabsOverflow.prototype,"labelNext",2),r([i({reflect:!0})],TabsOverflow.prototype,"dir",2),r([f()],TabsOverflow.prototype,"overflowState",2),r([b({selector:"sp-tabs",flatten:!0})],TabsOverflow.prototype,"scrollContent",2),r([v(".tabs-overflow-container")],TabsOverflow.prototype,"overflowContainer",2);
//# sourceMappingURL=TabsOverflow.js.map
